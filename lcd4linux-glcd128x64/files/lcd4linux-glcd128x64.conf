# GLCD2USB configuration for plein-aire router
#
# vim: set ts=4 sw=4 ai et

Variables {
    tick 500
    tack 250
    second 1000
    minute 60000

    landev 'br-lan'
#    wandev 'eth1'
#    wandev 'usb0'
#    wandev '3g-ppp0'
    wandev 'eth2'
    wifidev 'wlan0'

#    modem_ui_dev '/dev/ttyUSB1'
}

Display GLCD2USB {
    Driver 'GLCD2USB'
    Brightness 255
}

Widget OS {
    class 'Text'
#    expression '*** '.strftime('%d.%m.%Y %H:%M:%S %Z', time()).' *** '.uname('sysname').' '.uname('nodename').' '.uname('release').' ***'
    expression strftime('%d.%m.%Y %H:%M:%S', time())
    width 21
#    align 'M'
    align 'C'
    style 'bold'
#    speed 200
#    update minute
    update second
}

Widget CPU {
    class 'Text'
    expression proc_stat::cpu('busy', 500)
    prefix 'CPU'
    postfix '%'
    width 9
    precision 1
    align 'R'
    update tick
}

Widget CPUBar {
    class 'Bar'
    expression  proc_stat::cpu('busy',   500)
    expression2 proc_stat::cpu('system', 500)
    length 10
    direction 'E'
    update tack
}

Widget RAM {
    class 'Text'
    expression (meminfo('MemTotal') - meminfo('MemFree') - meminfo('Cached') - meminfo('Buffers')) / 1024
    prefix 'RAM'
    postfix ' M'
    width  9
    precision 0
    align  'R'
    update tick
}

Widget RAMBar {
    class 'Bar'
    expression  (meminfo('MemTotal') - meminfo('MemFree') - meminfo('Cached') - meminfo('Buffers'))
    expression2 (meminfo('SwapTotal') - meminfo('SwapFree'))
    max meminfo('MemTotal')
    length 10
    direction 'E'
    update tack
}

Widget Uptime {
    class 'Text'
    expression uptime('%dd %H:%M:%S').' L '.loadavg(1)
    prefix 'Up '
    width 20
    align 'R'
    update second
}

Widget LAN {
    class 'Text'
    expression (netdev(landev, 'Rx_bytes', 500) + netdev(landev, 'Tx_bytes', 500))/1024
    prefix 'LAN'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
}

Widget LANBar {
    class 'Bar'
    expression  netdev(landev, 'Rx_bytes', 500)
    expression2 netdev(landev, 'Tx_bytes', 500)
    length 14
    direction 'E'
    update tack
}

Widget WAN {
    class 'Text'
    expression (netdev(wandev, 'Rx_bytes', 500)+netdev(wandev, 'Tx_bytes', 500))/1024
    prefix 'WAN'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
}

Widget WANBar {
    class 'Bar'
    expression  netdev(wandev, 'Rx_bytes', 500)
    expression2 netdev(wandev, 'Tx_bytes', 500)
    length 14
    direction 'E'
    update tack
}

#Widget ModemMode {
#    class 'Text'
#    expression huawei::mode('text')
#    prefix '3G '
#    width 10
#    align 'L'
#    update second
#}

#Widget ModemOperator {
#    class 'Text'
#    expression huawei::operator()
#    width 10
#    align 'L'
#    update minute
#}

#Widget ModemQuality {
#    class 'Text'
#    expression huawei::quality('%')
#    prefix 'QLT'
#    postfix '% '
#    width 10
#    precision 0
#    align 'R'
#    update tick
#}

#Widget ModemQualityBar {
#    class 'Bar'
#    expression huawei::quality('%')
#    max 100.0
#    length 10
#    direction 'E'
#    update tack
#}

Widget YotaRSSI {
    class 'Text'
    expression exec('awk -F= "/3GPP.RSSI/ { print \$2 }" /tmp/yota-status.tmp', 1000)
    prefix 'RSSI'
    postfix ' '
    width 10
    align 'R'
    update second
}

Widget YotaSINR {
    class 'Text'
    expression exec('/usr/lib/lcd4linux/yota-status.sh', 1000)
#    expression exec('/etc/yota-status.sh', 1000)
    width 19
    length 19
    align 'L'
    update second
}

Widget Heart {
    class 'Icon'
    speed second
    Bitmap {
        Row1 '.....|.....|.....|.....|.....|.....'
        Row2 '.*.*.|.....|.*.*.|.....|.....|.....'
        Row3 '*****|.*.*.|*****|.*.*.|.*.*.|.*.*.'
        Row4 '*****|.***.|*****|.***.|.***.|.***.'
        Row5 '.***.|.***.|.***.|.***.|.***.|.***.'
        Row6 '.***.|..*..|.***.|..*..|..*..|..*..'
        Row7 '..*..|.....|..*..|.....|.....|.....'
        Row8 '.....|.....|.....|.....|.....|.....'
    }
}

Widget ImageTest {
    class 'Image'
    file '/usr/share/lcd4linux/tux.png'
#    file '/etc/tux.png'
    update 1000
    reload 0
    visible 1
    inverted 0
}

Layout RouterLayer {
    Row1 {
        Col1  'OS'
    }
    Row2 {
        Col1  'CPU'
        Col10 'Heart'
        Col11 'CPUBar'
    }
    Row3 {
        Col1  'RAM'
        Col11 'RAMBar'
    }
    Row4 {
        Col1  'Uptime'
    }
    Row5 {
        Col1  'LAN'
        Col11 'LANBar'
    }
    Row6 {
        Col1  'WAN'
        Col11 'WANBar'
    }
    Row7 {
        #Col1  'ModemMode'
        #Col11 'ModemOperator'
	Col1  'YotaRSSI'
    }
    Row8 {
        #Col1  'ModemQuality'
        #Col11 'ModemQualityBar'
	Col1  'YotaSINR'
    }
    Layer 2 {
        X1.Y1 'ImageTest'
    }
}

Display 'GLCD2USB'
Layout 'RouterLayer'
